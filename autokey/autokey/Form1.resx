<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHiAAAAEAIACoDwAAFgAAACgAAAAeAAAAQAAAAAEAIAAAAAAAAA8AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXeAAA13gAAdd4AB3XeABg13gAptd4
        ANjXeADy13gA/dd4AP7XeAD213gA59d4AMrXeACc13gAYNd4ACfXeAAF13gAANh4AAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA13gAANd4AADXeAAa13gAedd4ANLXeAD513gA/9d4
        AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA+dd4AN/XeACl13gAU9d4ABLXeAAA13gAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXeAAA13gAAtd4AEnXeADL13gA/td4AP/XeAD/13gA/9d4
        AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA+td4AKjXeAAK13gAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANd4AADXeAAD13gAZtd4AOvXeAD/13gA/9d4AP/XeAD/13gA/9d4
        AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AM3XeAAQ13gAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA13gAANd4AADXeABh13gA8dd4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AM3XeAAQ13gAAAAA
        AAAAAAAAAAAAAAAAAADXeAAA13gAANd4ADnXeADj13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AM3XeAAQ13gAAAAA
        AAAAAAAAAAAAAAAAAADXeAAA13gAC9d4ALDXeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA+td4
        ANvXeACv13gAi9d4AHjXeAB313gAhdd4AKXXeADO13gA8td4AP/XeAD/13gA/9d4AM3XeAAQ13gAAAAA
        AAAAAAAAAAAAANd4AADXeAAA13gAS9d4APXXeAD/13gA/9d4AP/XeAD/13gA/9d4APzXeADD13gAXtd4
        AB3XeAAE13gAANd4AADXeAAA13gAANd4AALXeAAS13gAPNd4AIXXeADV13gA/9d4AM3XeAAQ13gAAAAA
        AAAAAAAAAAAAANd4AADXeAAC13gAndd4AP/XeAD/13gA/9d4AP/XeAD/13gA99d4AIjXeAAU13gAANd4
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA13gAANd4AAHXeAAb13gAb9d4AJ7XeAAP13gAAAAA
        AAAAAAAAAAAAANd4AADXeAAY13gA1dd4AP/XeAD/13gA/9d4AP/XeAD/13gAkdd4AAjXeAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXeAAA13gAAdd4AA3XeAAD13gAAAAA
        AAAAAAAAAAAAANd4AADXeAA013gA79d4AP/XeAD/13gA/9d4AP/XeADY13gAIdd4AAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANd4AADXeABJ13gA+dd4AP/XeAD/13gA/9d4AP/XeACZ13gAANd4AAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANd4AADXeABQ13gA+9d4AP/XeAD/13gA/9d4AP/XeACI13gAG9d4AB/XeAAf13gAH9d4
        AB/XeAAf13gAH9d4AB/XeAAf13gAH9d4AB/XeAAf13gAH9d4AB/XeAAf13gAH9d4AB/XeAAf13gAH9d4
        AB0AAAAAAAAAANd4AADXeABJ13gA+dd4AP/XeAD/13gA/9d4AP/XeADu13gA39d4AODXeADg13gA4Nd4
        AODXeADg13gA4Nd4AODXeADg13gA4Nd4AODXeADg13gA4Nd4AODXeADg13gA4Nd4AODXeADg13gA4dd4
        AM8AAAAAAAAAANd4AADXeAA113gA8Nd4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AOwAAAAAAAAAANd4AADXeAAZ13gA19d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AOwAAAAAAAAAANd4AADXeAAD13gApNd4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AOzXeAAJ13gAANd4AADXeAAA13gAVdd4APnXeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AOrXeABg13gADNd4AADXeAAA13gAEdd4AL7XeAD/13gA/9d4AP/XeADs13gA4dd4AOLXeADi13gA4td4
        AOLXeADi13gA4td4AOLXeADi13gA4td4AOvXeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AN3XeACe13gAb9d4AAHXeAAA13gAANd4AErXeADu13gA/9d4AP/XeAB813gAHdd4ACHXeAAh13gAIdd4
        ACHXeAAh13gAIdd4ACHXeAAh13gAHdd4AGzXeAD913gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AMLXeABr13gA6Nd4AFvXeAAB13gAANd4AAPXeAB613gA+dd4AP/XeACW13gAANd4AAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA13gAANd4AGTXeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AJXXeAAt13gA49d4AO3XeABm13gABdd4AADXeAAJ13gAhdd4APnXeADU13gAGtd4AAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADXeAAA13gAANd4AIfXeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA99d4
        AFjXeAAF13gApNd4AP/XeAD013gAi9d4ABfXeAAA13gAB9d4AGjXeADf13gAbNd4AADXeAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADXeAAA13gADtd4AMDXeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA1Nd4
        AB7XeAAA13gASdd4APTXeAD/13gA/dd4AMTXeABP13gACdd4AADXeAAw13gAddd4ABzXeAAA2HcAAAAA
        AAAAAAAAAAAAANd4AADXeAAA13gAWdd4APbXeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gAidd4
        AADXeAAA13gACdd4AKrXeAD/13gA/9d4AP/XeAD013gAsdd4AFTXeAAV13gABdd4AAfXeAAA2HkAAAAA
        AADXeAAA13gAANd4AAXXeABN13gA3dd4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeADi13gALtd4
        AADXeAAA13gAANd4ADXXeADi13gA/9d4AP/XeAD/13gA/9d4APnXeADU13gAm9d4AGfXeABG13gANtd4
        ADPXeAA/13gAYtd4AKbXeADv13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP3XeAB713gAANd4
        AAAAAAAA13gAANd4AADXeABl13gA9Nd4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP7XeAD413gA8dd4
        APDXeAD113gA/dd4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4ALHXeAAS13gAAAAA
        AAAAAAAAAAAAANd4AADXeAAG13gAfdd4APfXeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gAwtd4ACTXeAAA13gAAAAA
        AAAAAAAAAAAAAAAAAADXeAAA13gACNd4AHXXeADv13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP7XeAC213gAJdd4AADXeAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA13gAANd4AAPXeABP13gAzNd4AP3XeAD/13gA/9d4AP/XeAD/13gA/9d4
        AP/XeAD/13gA/9d4AP/XeAD/13gA/9d4AP/XeAD/13gA69d4AIbXeAAV13gAANd4AAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANd4AADXeAAA13gAGtd4AHTXeADO13gA+Nd4AP/XeAD/13gA/9d4
        AP/XeAD/13gA/9d4AP/XeAD/13gA/Nd4AOPXeACd13gAOdd4AAPXeAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA13gAANd4AADXeAAa13gAXNd4AKLXeADR13gA7dd4
        APvXeAD+13gA9td4AN/XeACz13gAc9d4AC7XeAAF13gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/wAB8/4AAHP4AAAz8AAAM/AAADPgAAAzwAAAM8ADwDOAH/gzgD/+M4B///OA///zgAAAA4AAAAOAA
        AADgAAAA4AAAAHAAAAAwAAAAGAAAAAg/8AAEH/AAAh/gAICP4ASAD4AEwAAADOAAAAzgAAAc8AAAPPgA
        AHz+AAD8/4AD/A==
</value>
  </data>
</root>